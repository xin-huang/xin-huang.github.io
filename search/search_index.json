{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Hello, I am a student has been working on many problems:</p> <ul> <li>Detecting natural selection</li> <li>Estimating selective pressures</li> <li>Quantifying time-varying selective pressures</li> <li>Inferring the distribution of fitness effects</li> <li>Detecting archaic admixture</li> </ul> <p>My primary research interest lies in developing and applying advanced computational methods, such as machine learning and deep learning, to enable rigorous population genetic inference. I aim to uncover how evolutionary forces\u2014mutation, genetic drift, gene flow, and natural selection\u2014shape genetic diversity across species, with broad implications for understanding gene adaptation, biodiversity conservation, and evolutionary history. In addition, I am committed to integrating heterogeneous computational approaches into cohesive, reproducible pipelines, enabling efficient analysis of large-scale genomic datasets. Ultimately, my research seeks to bridge algorithmic innovation and biological discovery, advancing both the theoretical foundations and practical applications of evolutionary genomics.</p>"},{"location":"development/","title":"Development Guideline","text":"<p>To maintain code quality, ensure consistency, and enable smooth collaboration across the team, it is essential to follow a standardized development workflow. This document outlines best practices for contributing to the project. By adhering to these guidelines, we can reduce bugs, improve readability, and speed up reviews and integration.</p>"},{"location":"development/#1-branch-management","title":"1. Branch Management","text":"<ul> <li>All development code must be submitted to the <code>dev</code> branch.</li> <li>Do not push code directly to the <code>main</code> branch.</li> <li>All new features, bug fixes, and experiments should be done in the <code>dev</code> branch or a feature branch based on <code>dev</code>.</li> <li>Do not be afraid to modify code directly in the <code>dev</code> branch rather than creating duplicate code via copy-paste. If you think something should be improved, just update the existing code. Git will track all changes, and GitHub provides an easy-to-read visual comparison for reviewing edits.</li> </ul>"},{"location":"development/#2-code-style-and-documentation","title":"2. Code Style and Documentation","text":"<ul> <li>Write modular, reusable functions instead of duplicating code through copy-paste.</li> <li>Use NumPy-style docstrings for all functions and modules.</li> <li>Use Python type hints to improve clarity and robustness.</li> <li>Format your code using <code>black</code> to enforce consistency.</li> <li>Run <code>flake8</code> to check for style issues and potential bugs.</li> </ul>"},{"location":"development/#3-testing","title":"3. Testing","text":"<ul> <li>Each module in the source code should have a corresponding test file placed in the <code>tests/</code> directory.</li> <li>Use <code>pytest</code> to implement and run unit tests.</li> <li>Tests should cover core logic and include edge cases.</li> <li>Make sure your code passes all tests before pushing to GitHub.</li> </ul>"},{"location":"development/#4-commit-best-practices","title":"4. Commit Best Practices","text":"<ul> <li>Update your code regularly in small, manageable chunks.</li> <li>Avoid large, monolithic commits because they are harder to review and debug.</li> <li>(Optional) Follow the Conventional Commits style for consistency.</li> </ul>"},{"location":"development/#5-pull-requests","title":"5. Pull Requests","text":"<ul> <li>Open a Pull Request (PR) when contributing to the <code>main</code> branch.</li> <li>A reviewer will be notified, review your code, and provide feedback.</li> <li>Revise your code based on the feedback before merging into <code>main</code>.</li> </ul>"},{"location":"development/#6-collaboration-tips","title":"6. Collaboration Tips","text":"<ul> <li>Regularly pull the latest changes from the <code>dev</code> branch to avoid conflicts.</li> <li>Communicate before making major changes to ensure team alignment.</li> <li>Don\u2019t hesitate to ask questions or reach out by opening an issue on GitHub.</li> </ul>"},{"location":"learning/","title":"\u8ac7\u5b78","text":"\u4e94\u71c8\u6703\u5143\u00b7\u5377\u7b2c\u5341\u4e5d     \u5357\u5dbd\u4e0b\u5341\u4e8c\u4e16\u694a\u6b67\u6703\u79aa\u5e2b\u6cd5\u55e3\u767d\u96f2\u5b88\u7aef\u79aa\u5e2b     \u8212\u5dde\u767d\u96f2\u5b88\u7aef\u79aa\u5e2b\uff0c\u8861\u967d\u845b\u6c0f\u5b50\u3002     \u5e7c\u4e8b\u7ff0\u58a8\uff0c\u51a0\u4f9d\u8336\u9675\u90c1\u79aa\u5e2b\u62ab\u524a\uff0c\u5f80\u53c3\u694a\u6b67\u3002     \u6b67\u4e00\u65e5\u5ffd\u554f\uff1a\u300e\u53d7\u696d\u5e2b\u70ba\u8ab0\uff1f\u300f     \u5e2b\u66f0\uff1a\u300e\u8336\u9675\u90c1\u548c\u5c1a\u3002\u300f     \u6b67\u66f0\uff1a\u300e\u543e\u805e\u4f0a\u904e\u6a4b\u906d\u6709\u7701\uff0c\u4f5c\u5048\u751a\u5947\uff0c\u80fd\u8a18\u5426\uff1f\u300f     \u5e2b\u8aa6\u66f0\uff1a     \u300e\u6211\u6709\u660e\u73e0\u4e00\u9846\uff0c\u4e45\u88ab\u5875\u52de\u95dc\u9396\u3002     \u4eca\u671d\u5875\u76e1\u5149\u751f\uff0c\u7167\u7834\u5c71\u6cb3\u842c\u6735\u3002\u300f     \u6b67\u7b11\u800c\u8da8\u8d77\uff0c\u5e2b\u6115\u7136\uff0c\u901a\u5915\u4e0d\u5bd0\u3002     \u9ece\u660e\uff0c\u54a8\u8a62\u4e4b\u3002     \u9069\u6b72\u66ae\uff0c\u6b67\u66f0\uff1a\u300e\u6c5d\u898b\u6628\u65e5\u6253\u6bc6\u513a\u8005\u9ebd\uff1f\u300f     \u66f0\uff1a\u300e\u898b\u3002\u300f     \u6b67\u66f0\uff1a\u300e\u6c5d\u4e00\u7c4c\u4e0d\u53ca\u6e20\u3002\u300f     \u5e2b\u5fa9\u99ed\u66f0\uff1a\u300e\u610f\u65e8\u5982\u4f55\uff1f\u300f     \u6b67\u66f0\uff1a\u300e\u6e20\u611b\u4eba\u7b11\uff0c\u6c5d\u6015\u4eba\u7b11\u3002\u300f     \u5e2b\u5927\u609f\u3002"},{"location":"publications/","title":"Selected Publications","text":"<p>* Corresponding author</p>"},{"location":"publications/#research","title":"Research","text":"\u2022 Huang X*, Kruisz P, Kuhlwilm M*. 2022.      sstar: A Python package for detecting archaic introgression from population genetic data with S*. Molecular Biology and Evolution 39: msac212.    \u2022 Huang X, Fortier AL, Coffman AJ, Struck TJ, Irby MN, James JE, Le\u00f3n-Burguete JE, Ragsdale AR, Gutenkunst RN*. 2021.      Inferring genome-wide correlations of mutation fitness effects between populations. Molecular Biology and Evolution 38: 4588\u20134602.    \u2022 Huang X*, Wang S, Jin L*, He Y*. 2021.      Dissecting dynamics and differences of selective pressures in the evolution of human pigmentation. Biology Open 10: bio056523."},{"location":"publications/#reviews","title":"Reviews","text":"\u2022 Huang X*, Hackl J, Kuhlwilm M*. 2025.     Decoding genomic landscapes of introgression. Accepted by Trends in Genetics.    \u2022 Huang X*, Rymbekova A, Dolgova O, Lao O*, Kuhlwilm M*. 2024.      Harnessing deep learning for population genetic inference. Nature Reviews Genetics 25: 61\u201378."},{"location":"publications/#comments","title":"Comments","text":"\u2022 Hackl J, Huang X*. 2025. Revisiting adaptive introgression at the HLA genes in Lithuanian genomes with machine learning. Infection, Genetics and Evolution 127: 105708."},{"location":"software/","title":"Selected Software","text":"<p>\u2022 dadi-cli: Automated and Distributed Population Genetic Model Inference from Allele Frequency Spectra </p> <p> </p> <p>\u2022 sstar: Detecting Archaic Introgression from Population Genetic Data with S*</p> <p> </p> <p>\u2022 sai: Statistics for Adaptive Introgression</p> <p> </p>"}]}